services:
  webapi1:
    image: loadbalancer
    build:
      context: .
      dockerfile: LoadBalancer.WebAPI/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Data Source=172.24.64.1,1433;Database=LoadBalancerDatabase;User=sa;Password=Admin@123;TrustServerCertificate=True
    networks:
      - load-balancer-network
    depends_on:
      - load-balancer-db

  webapi2:
    image: loadbalancer
    build:
      context: .
      dockerfile: LoadBalancer.WebAPI/Dockerfile
    ports:
      - "8090:8080"
      - "8091:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Data Source=172.24.64.1,1433;Database=LoadBalancerDatabase;User=sa;Password=Admin@123;TrustServerCertificate=True
    networks:
      - load-balancer-network
    depends_on:
      - load-balancer-db

  load-balancer-db:
    container_name: load-balancer-db
    hostname: load-balancer-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Admin@123"
      MSSQL_DATA_DIR: /var/opt/mssql/data
      MSSQL_PID: "Developer"
      MSSQL_TCP_PORT: 1433
    ports:
      - 1433:1433
    networks:
      - load-balancer-network
    volumes:
      - ./data:/var/opt/mssql/data
      - ./log:/var/opt/mssql/log
      - ./secrets:/var/opt/mssql/secrets

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - load-balancer-network
    depends_on:
      - webapi1
      - webapi2

networks:
  load-balancer-network:
    driver: bridge